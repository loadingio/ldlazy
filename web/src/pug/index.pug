doctype html
include @/@loadingio/bootstrap.ext/dist/index.pug
html(lang="en")
  head
    title ldlazy
    meta(charset="utf-8")
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    meta(name="description",content="loading.io lazy load library")
    +css("assets/lib/bootstrap/main/css/bootstrap.min.css")
    +css("assets/lib/@loadingio/bootstrap.ext/main/index.min.css")
    +css("assets/lib/ldlazy/dev/index.min.css")
    +css("css/index.css")
  body
    .w-100.h-50.vertical-center.text-center.rwd.bg-light
      .w-100
        h1.display-4.font-weight-bold ldlazy
        p JS library that "shows" images only if they are in viewport.
        img.ldlz(src="assets/img/sketch-1.gif")
        img.ldlz(src="assets/img/sketch-3.gif")
        img.ldlz(src="assets/img/sketch-5.gif")
    .w-1024.rwd.p-4.mx-auto.typeset.heading-contrast
      .row
        .col-md-9

          h2 About
          p Instead of lazy loading, #[b ldlazy] is a lazy "showing" library that shows image only if they are in the viewport.
          h2 Usage
          p include the required files, which could be found in its #[a(href="https://github.com/loadingio/ldlazy/",target="_blank") Github repository]:
          .example.code-block.
            &lt;link rel="stylesheet" type="text/css" href="path-to-ldlazy-dist/index.min.css"&gt;
            &lt;script src="path-to-ldlazy-dist/index.min.js"&gt;&lt;/script&gt;
          p Then, create and initialize the ldlazy instance:
          .example.code-block.
            var ldlz = new ldlazy({
              root: document.body,
              toggle: function(n) { ... }
            });
            ldlz.add( ... );
          h2 Configurations
          p To config ldlazy, pass an object with configs from any of following:
          ul
            li #[code root] - root element for monitoring scroll.
            li #[code toggle] - when visibility changes, toggle will be called with the target node as param. default null.
            li #[code debounce] - millisecond delay before handling events. require #[a(href="https://github.com/loadingio/debounce.js",target="_blank") debounce.js], otherwise will be ignored.
          h2 APIs
          ul
            li #[code ldlz.add(n)] - start monitoring node n for visibility change.
            li #[code ldlz.remove(n)] - stop monitoring node n for visibility change.
          h2 License
          p MIT License.
          .ldlz.nocache.placeholder(data-src="/assets/img/inbox.svg")
          //-include base64.pug
        .col-md-3
          each i in [1,2,3,4,5]
            img.mb-4.w-100.ldlz.ratio-1by1(data-src=`assets/img/c${i}.svg`)

    .w-1024.rwd.my-4.mx-auto
      h2.text-center.font-weight-bold 320 Animated Patterns
      .d-flex.justify-content-around.flex-wrap
        each a in [1,2,3,4,5,6,7,8]
          each b in [1,2,3,4,5,6,7,8]
            each i in [1,2,3,4,5]
              img.m-4.ldlz(data-src=`assets/img/c${i}.svg`,style="width:128px;height:128px")

    +script("assets/lib/ldlazy/dev/index.min.js")
    +script("js/index.js")

